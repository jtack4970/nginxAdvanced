proxy_cache_path /data/nginx/cache2 levels=1:2 keys_zone=upstreamCache:10m max_size=60m inactive=60m;

map $request_method $purge_method {
    PURGE 1;
    default 0;
}

log_format sticky "$request\tUpstream: $upstream_addr \t URL token: $arg_serverid\t Cookie: $cookie_serverid";

upstream myServers {
    zone backend 64k;
    #state /var/lib/nginx/state/myServers.state;

    server 127.0.0.1:8081 route=backend1;
    server 127.0.0.1:8082 route=backend2;
    server 127.0.0.1:8083 route=backend3;

    sticky route $arg_serverid $cookie_serverid;
}

match health_conditions {
    status 200-399;
    header Content-Type = text/html;
    body !~ maintenance;
}

server {
    listen 8080;
    root /home/student1/public_html;
    status_zone upstream_proxy;
    error_log   /var/log/nginx/upstream.error.log info;
    access_log  /var/log/nginx/upstream.access.log sticky;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    add_header X-Proxy-Cache $upstream_cache_status;

    location / {
        proxy_cache upstreamCache;
        proxy_cache_valid 10m;
        proxy_pass http://myServers;
        proxy_cache_purge $purge_method;
        health_check match=health_conditions fails=2 uri=/health/test.html;
    }
}

server {
    listen 9090;
    root /usr/share/nginx/html;

    location /upstream_conf {
        upstream_conf;
    }

    location = /status {
        status;
    }
}